"Bazel dependencies"

bazel_dep(name = "rules_jvm_external", version = "6.2")
bazel_dep(name = "contrib_rules_jvm", version = "0.27.0")
bazel_dep(name = "rules_go", version = "0.50.1")
bazel_dep(name = "rules_pkg", version = "1.0.1")
bazel_dep(name = "rules_oci", version = "2.0.1")

maven = use_extension("@rules_jvm_external//:extensions.bzl", "maven")
oci = use_extension("@rules_oci//oci:extensions.bzl", "oci")

# Version variables
# renovate: datasource=maven depName=com.google.inject:guice-bom
GUICE_VERSION = "7.0.0"
# renovate: datasource=maven depName=org.jboss.resteasy:resteasy-bom
RESTEASY_VERSION = "7.0.0.Alpha3"
# renovate: datasource=maven depName=org.eclipse.jetty:jetty-bom
JETTY_VERSION = "11.0.24"
# renovate: datasource=maven depName=org.glassfish.jersey:jersey-bom
JERSEY_VERSION = "4.0.0-M1"
# renovate: datasource=maven depName=org.flywaydb:flyway-core
FLYWAY_VERSION = "10.15.2"
# renovate: datasource=maven depName=com.fasterxml.jackson:jackson-bom
JACKSON_VERSION = "2.18.1"
# renovate: datasource=maven depName=org.jooq:jooq
JOOQ_VERSION = "3.19.15"
# renovate: datasource=maven depName=org.postgresql:postgresql
POSTGRES_VERSION = "42.7.4"
# renovate: datasource=maven depName=org.assertj:assertj-core
ASSERTJ_VERSION = "3.26.3"

JUNIT_VERSION = "5.10.3"
JUNIT_PLATFORM_VERSION = "1.10.3"
MOCKITO_VERSION = "5.12.0"
TESTCONTAINERS_VERSION = "1.19.8"

maven.install(
    artifacts = [
        # Testing
        "org.assertj:assertj-core:" + ASSERTJ_VERSION,

        "org.junit.platform:junit-platform-launcher:" + JUNIT_PLATFORM_VERSION,
        "org.junit.platform:junit-platform-reporting:" + JUNIT_PLATFORM_VERSION,

        "org.junit.jupiter:junit-jupiter-api:" + JUNIT_VERSION,
        "org.junit.jupiter:junit-jupiter-engine:" + JUNIT_VERSION,

        "org.mockito:mockito-core:" + MOCKITO_VERSION,
        "org.mockito:mockito-junit-jupiter:" + MOCKITO_VERSION,

        "org.testcontainers:junit-jupiter:" + TESTCONTAINERS_VERSION,
        "org.testcontainers:postgresql:" + TESTCONTAINERS_VERSION,

        # Dependency Injection
        "com.google.inject:guice:" + GUICE_VERSION,
        "com.google.inject.extensions:guice-servlet:" + GUICE_VERSION,

        # Resteasy
        "org.jboss.resteasy:resteasy-servlet-initializer:" + RESTEASY_VERSION,
        "org.jboss.resteasy:resteasy-client:" + RESTEASY_VERSION,
        "org.jboss.resteasy:resteasy-jaxb-provider:" + RESTEASY_VERSION,

        # Jakarta EE
        "jakarta.platform:jakarta.jakartaee-web-api:10.0.0",

        # Jetty
        "org.eclipse.jetty:jetty-server:" + JETTY_VERSION,
        "org.eclipse.jetty:jetty-servlet:" + JETTY_VERSION,
        "org.eclipse.jetty:jetty-util:" + JETTY_VERSION,

        # Jersey
        "org.glassfish.jersey.core:jersey-server:" + JERSEY_VERSION,
        "org.glassfish.jersey.containers:jersey-container-servlet-core:" + JERSEY_VERSION,
        "org.glassfish.jersey.inject:jersey-hk2:" + JERSEY_VERSION,
        "org.glassfish.jersey.media:jersey-media-json-jackson:" + JERSEY_VERSION,

        # Flyway
        "org.flywaydb:flyway-core:" + FLYWAY_VERSION,
        "org.flywaydb:flyway-database-postgresql:" + FLYWAY_VERSION,

        # Jackson
        "com.fasterxml.jackson.datatype:jackson-datatype-jdk8:" + JACKSON_VERSION,

        # PostgreSQL
        "org.postgresql:postgresql:" + POSTGRES_VERSION,

        # jOOQ
        "org.jooq:jooq:" + JOOQ_VERSION,
    ],
    fetch_sources = True,
    repositories = [
        "http://uk.maven.org/maven2",
        "https://jcenter.bintray.com/",
    ],
)

use_repo(maven, "maven")

oci.pull(
    name = "nginx",
    image = "docker.io/library/nginx",
    digest = "sha256:28402db69fec7c17e179ea87882667f1e054391138f77ffaf0c3eb388efc3ffb",
    platforms = [
        "linux/386",
        "linux/amd64",
        "linux/arm/v5",
        "linux/arm/v7",
        "linux/arm64/v8",
        "linux/mips64le",
        "linux/ppc64le",
        "linux/s390x"
    ]
)

oci.pull(
    name = "registry",
    image = "docker.io/library/registry",
    digest = "sha256:ac0192b549007e22998eb74e8d8488dcfe70f1489520c3b144a6047ac5efbe90",
    platforms = [
        "linux/amd64",
        "linux/arm/v6",
        "linux/arm/v7",
        "linux/arm64/v8",
        "linux/ppc64le",
        "linux/s390x",
    ]
)

oci.pull(
    name = "distroless",
    image = "gcr.io/distroless/static",
    digest = "sha256:cc226ca14d17d01d4b278d9489da930a0dd11150df10ae95829d13e6d00fbdbf",
    platforms = [
        "linux/amd64",
        "linux/arm/v7",
        "linux/arm64/v8",
        "linux/s390x",
        "linux/ppc64le",
    ]
)

use_repo(
    oci,
    "distroless",
    "distroless_linux_amd64",
    "distroless_linux_arm_v7",
    "distroless_linux_arm64_v8",
    "distroless_linux_s390x",
    "distroless_linux_ppc64le",

    "nginx",
    "nginx_linux_386",
    "nginx_linux_amd64",
    "nginx_linux_arm_v5",
    "nginx_linux_arm_v7",
    "nginx_linux_arm64_v8",
    "nginx_linux_mips64le",
    "nginx_linux_ppc64le",
    "nginx_linux_s390x",

    "registry",
    "registry_linux_amd64",
    "registry_linux_arm_v6",
    "registry_linux_arm_v7",
    "registry_linux_arm64_v8",
    "registry_linux_ppc64le",
    "registry_linux_s390x",
)

